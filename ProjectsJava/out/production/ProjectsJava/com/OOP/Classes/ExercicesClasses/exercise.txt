1.public class CellulareTester
  {
  public static void main(String[] args)
  {
  /**Creo un oggetto della classe Cellulare,
  con 20€ di credito e 0 chiamate effettuate.*/
  Cellulare nokia = new Cellulare(20.0,0);
  /**Ricarico il cellure di 50€.*/
  nokia.ricarica(50.0);
  /**Effettuo una chiamata di 13 minuti.*/
  nokia.chiamata(13.0);
  /**Stampo il credito.*/
  System.out.println(nokia.numero404());
  /**Stampo l'aspettativa di credito.*/
  System.out.println("Credito, mi aspetto: 67.4");
  /**Stampo il numero di chiamate effettuate.*/
  System.out.println(nokia.getNumeroChiamate());
  /**Stampo l'aspettativa del numero di chiamate effettuate.*/
  System.out.println("Numero Chiamate, mi aspetto: 1");
  /**Azzero il numero di chiamate effettuate.*/
  nokia.azzeraChiamate();
  /**Stampo il numero di chiamate effettuate.*/
  System.out.println(nokia.getNumeroChiamate());
  /**Stampo l'aspettativa del numero di chiamate effettuate.*/
  System.out.println("Numero Chiamate, mi aspetto: 0");
  }
  }



2.public class DistributoreBenzinaTester
  {
  public static void main (String[] args)
  {
  /**Creo un oggetto della classe DistribitoreBenzina2,
  lo chiamo esso, imposto 1.539 euro al litro.*/
  DistributoreBenzina esso = new DistributoreBenzina(1.539);
  /**Rifornisco il deposito di 100 litri.*/
  esso.rifornisci(100);
  /**Stampo la quantità di benzia presente nel deposito.*/
  System.out.println(esso.getBenzina());
  /**Creo un oggetto della classe Car2,
  lo chiamo punto, gli imposto una resa di 15 Km/l.*/
  Car punto = new Car(15);
  /**Rifornisco la punto di 20 euro di benzina.*/
  esso.vendi(20, punto);
  /**Stampo la quantità di benzia presente nel deposito.*/
  System.out.println(esso.getBenzina());
  /**Stampo la quantità di benzia presente nel serbatoio della punto.*/
  System.out.println(punto.getGas());
  /**Faccio percorrere alla punto 20 Km.*/
  punto.drive(20);
  /**Stampo la quantità di benzia presente nel serbatoio della punto.*/
  System.out.println(punto.getGas());
  /**Aggiorno il prezzo della benzina.*/
  esso.aggiorna(1.542);
  }


3.Progettare e realizzare una classe Car(automobile) con le proprietà seguenti.
  Un’automobile ha una determinata resa del carburante (misurata in miglia/galloni
  o in litri/chilometri: scegliete il sistema che preferite) e una certa quantità
  di carburante nel serbatoio. La resa è specificata dal costruttore e il livello
  iniziale del carburante è a zero. Fornire questi metodi: un metodo drive per
  simulare il percorso di un’automobile per una certa distanza, riducendo il
  livello di carburante nel serbatoio; un metodo getGas, per ispezionare il
  livello corrente del carburante; un metodo addGas per far rifornimento.


  4.Progettare una classe di nome Dipendente. Tale classe prevede due variabili di
    istanza una definita come nome, di tipo String e una definita come stipendio di
    tipo double. Scrivere un costruttore senza parametri, un costruttore con due
    parametri (nome e stipendio).La classe deve inoltre implementare i seguenti
    metodi. Un metodo definito come public String getNome() che restituisce il nome
    del dipendente. Un metodo definito come public double getStipendio() che
    restituisce lo stipendio del dipendente. Un metodo public void
    setStipendio(double nuovoStipendio) che modifica il valore dello stipendio. Un
    metodo public void setNome(String nuovoNome) che cambia il nome al dipendente.
    Aggiungere poi un metodo aumento(double percentuale), che incrementi lo
    stipendio del dipendente secondo una certa percentuale.


    5.Progettare un programma che costruisca un conto bancario chiamato
      harrysChecking, versi in esso $1000, prelevi da esso $500, prelevi altri $400 e
      infine visualizzi il saldo rimanente.
      Il programma deve poi creare un altro conto bancario chiamato momsSaving,
      utilizzando il costruttore che inizializza la variabile balance.
      Su quest’ultimo conto deve essere poi applicato un interesse del 10%, a seguito
      del quale viene stampato il saldo.



     6.Scrivere una classe sealed Lavoratori, una class final Developer,
       una classe non sealed Psicologo.
       Definire nella classe Developer le seguenti proprietà: reddannuolordo 78000,
       coeffredd 78%, tassa irpef 15% e tassa inps 26%.
       implementare i seguenti metodi: getUtileTasse-getTassaIrpef-GetTassaInps-GetRedditoAnnuoNetto.
       Definire nella classe Psicologo le seguenti proprietà: redditoannuolordo 45000€,
        coeffredd 78%, irpef 5%,tassa inps 26%.
        implementare i seguenti metodi: getUtileTasse-getTassaIrpef-GetTassaInps-GetRedditoAnnuoNetto.
        Stampare il valore del redditoannuonetto di entrambi le classi all'interno della classe sealed.




